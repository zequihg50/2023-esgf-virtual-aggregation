<?xml version="1.0" encoding="UTF-8"?>
{% set attrs = ['activity_id', 'Conventions', 'data_specs_version', 'experiment', 'experiment_id', 'forcing_index',
                'frequency', 'grid', 'grid_label', 'initialization_index', 'institution', 'institution_id', 'license',
                'mip_era', 'nominal_resolution', 'physics_index', 'product', 'realization_index', 'realm',
                'source', 'source_id', 'source_type', 'sub_experiment', 'sub_experiment_id', 'table_id',
                'variable_id', 'variant_label'] %}
<netcdf xmlns="http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2">
    <explicit/>

    <attribute name="__info__" value="Virtual dataset generated by the ESGF Virtual Aggregation Project (https://github.com/SantanderMetGroup/EVA)."/>
    <attribute name="__license__" value="This is a derived dataset product from ESGF, same licenses from original datasets apply for this dataset."/>
    <attribute name="__eva_version__" value="{{ eva_version }}"/>

    <attribute name="primary_variables" value="{{ (df[('GLOBALS', 'variable_id')].unique())|join(',') }}"/>
    <attribute name="size" type="int" value="{{ df[('GLOBALS', 'size')].sum()|int }}"/>
    <attribute name="size_human" value="{{ df[('GLOBALS', 'size')].sum()|filesizeformat }}"/>

    <!-- only mandatory (when required? = always) attributes from 
         http://cerfacs.fr/~coquart/data/uploads/cmip6_global_attributes_filenames_cvs_v6.2.6.pdf
         are included -->
    <!-- mandatory attributes are extracted from netcdf files
         BUT creation_date and further_info_url have got custom values relative to EVA -->
    {% for attr in attrs %}
    {% if ('GLOBALS', attr) in df.columns %}
    <attribute name="{{ attr }}" value="{{ (df[('GLOBALS', attr)].fillna("").iloc[0])|replace('\n', ' ') }}"/>
    {% else %}
    <attribute name="{{ attr }}" value=""/>
    {% endif %}
    {% endfor %}
    <attribute name="further_info_url" value="See netCDF variable 'further_info_url'"/>
    <attribute name="creation_date" value="{{ creation }}"/>
    <attribute name="version" value="v{{ df[('GLOBALS', 'version')].iloc[0] }}"/>

    <dimension name="nfiles" length="{{ df|length }}"/>
    {% if ('GLOBALS', 'further_info_url') in df.columns %}
    <variable name="further_info_url" type="string" shape="nfiles 2">
        <values>{{ (df[[('GLOBALS', 'OPENDAP'), ('GLOBALS', 'further_info_url')]].agg(' '.join, axis=1))|join(' ') }}</values>
    </variable>
    {% endif %}
    {% if ('GLOBALS', 'tracking_id') in df.columns %}
    <variable name="tracking_id" type="string" shape="nfiles 2">
        <values>{{ (df[[('GLOBALS', 'OPENDAP'), ('GLOBALS', 'tracking_id')]].fillna("").agg(' '.join, axis=1))|join(' ') }}</values>
    </variable>
    {% endif %}

    <dimension name="variant_label" length="{{ (df[('GLOBALS', 'variant_label')].dropna().unique())|length }}"/>
    <variable name="variant_label" shape="variant_label" type="string">
        <attribute name="standard_name" value="realization"/>
        <attribute name="_CoordinateAxisType" value="Ensemble"/>
    </variable>
    <aggregation type="joinNew" dimName="variant_label">
        {% for variable in df[('GLOBALS', 'variable_id')].unique() %}
        <variableAgg name="{{ variable }}"/>
        {% endfor %}
        {% for ensemble,ensemble_group in df.groupby(('GLOBALS', 'variant_label')) %}
        <netcdf coordValue="{{ ensemble }}">
            <aggregation type="union">
            {% for variable,variable_group in ensemble_group[ensemble_group[('GLOBALS', 'frequency')] != 'fx'].groupby(('GLOBALS', 'variable_id')) %}
                 <netcdf>
                     {% if variable_group[('GLOBALS', '_modified_time_coord')].any() %}
                     <dimension name="time_{{ variable }}" orgName="time"/>
                     <variable name="time_{{ variable }}" orgName="time"/>
                     {% endif %}
                     <aggregation type="joinExisting" dimName="time">
                         {% for _,i in variable_group.sort_values(by=[('GLOBALS', 'localpath')]).iterrows() %}
                         {% if i[('GLOBALS', '_modified_time_coord')] %}
                         <netcdf location="{{ i[('GLOBALS', 'localpath')].rstrip('\n') }}" ncoords="{{ i[('_d_time', 'size')]|int }}">
                            <variable name="time">
                                <attribute name="units" value="{{ i[('time', 'units')] }}"/>
                                <attribute name="calendar" value="{{ i[('time', 'calendar')] }}"/>
                                <values>i[('time', '_values')]|join(' ')</values>
                            </variable>
                            <variable name="{{ variable }}" shape="{{ i[('_'.join(['_d', variable]), 'coordinates')]|replace(',', ' ') }}">
                                {% if (variable, 'coordinates') in i.index and i[(variable, 'coordinates')] %}
                                <attribute name="coordinates" value="{{ i[(variable, 'coordinates')]|replace(',', ' ') }}"/>
                                {% endif %}
                            </variable>
                         </netcdf>
                         {% else %}
                         <netcdf location="{{ i[('GLOBALS', 'localpath')].rstrip('\n') }}" ncoords="{{ i[('_d_time', 'size')]|int }}"/>
                         {% endif %}
                         {% endfor %}
                     </aggregation>
                 </netcdf>
            {% endfor %}
            {% for _,fx in ensemble_group[ensemble_group[('GLOBALS', 'frequency')] == 'fx'].iterrows() %}
                <netcdf location="{{ fx[('GLOBALS', 'localpath')].rstrip('\n') }}"/>
            {% endfor %}
            </aggregation>
        </netcdf>
        {% endfor %}
    </aggregation>
</netcdf>
