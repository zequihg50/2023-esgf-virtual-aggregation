{% set variable = df["variable_id"].iloc[0] %}
{% set attrs = ['activity_id', 'Conventions', 'data_specs_version', 'experiment', 'experiment_id', 'forcing_index',
        'frequency', 'grid', 'grid_label', 'initialization_index', 'institution', 'institution_id', 'license',
        'mip_era', 'nominal_resolution', 'physics_index', 'product', 'realization_index', 'realm',
        'source', 'source_id', 'source_type', 'sub_experiment', 'sub_experiment_id', 'table_id',
        'variable_id', 'variant_label', 'cmor_version'] %}
{% set no_parent_attrs = ['branch_method', 'parent_activity_id', 'parent_experiment_id', 'parent_mip_era',
        'parent_source_id', 'parent_time_units', 'parent_variant_label'] %}
        {% set omit_attrs = ['branch_time_in_child', 'branch_time_in_parent'] %}
<?xml version="1.0" encoding="UTF-8"?>
<netcdf xmlns="http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2">
    <explicit/>
    <attribute name="size" type="int" value="{{ df['size']|list|map('int')|sum }}" />
    <attribute name="size_human" value="{{ df['size']|list|map('int')|sum|filesizeformat(binary=True) }}" />

    <attribute name="__info__"
               value="Virtual dataset generated by the ESGF Virtual Aggregation"/>
    <attribute name="__license__"
               value="This is a derived dataset product from ESGF, same licenses from original datasets apply for this dataset."/>

    <!-- only mandatory (when required? = always) attributes from
         http://cerfacs.fr/~coquart/data/uploads/cmip6_global_attributes_filenames_cvs_v6.2.6.pdf
         are included -->
    <!-- mandatory attributes are extracted from netcdf files
         BUT creation_date and further_info_url have got custom values relative to EVA -->
    {% for attr in attrs %}
    {% if attr in df.columns %}
    <attribute name="{{ attr }}" value="{{ (df[attr].fillna('').iloc[0])|replace('\n', ' ') }}"/>
    {% else %}
    <attribute name="{{ attr }}" value=""/>
    {% endif %}
    {% endfor %}
    <!-- attributes that default to "no parent" if they don't exist -->
    {% for attr in no_parent_attrs %}
    {% if attr in df.columns and not (df[attr].isna().all()) %}
    <attribute name="{{ attr }}" value="{{ (df[attr].dropna().iloc[0])|replace('\n', ' ') }}"/>
    {% else %}
    <attribute name="{{ attr }}" value="no parent"/>
    {% endif %}
    {% endfor %}
    <!-- attributes that are omitted if they don't exist -->
    {% for attr in omit_attrs %}
    {% if attr in df.columns and not (df[attr].isna().all()) %}
    <attribute name="{{ attr }}" value="{{ (df[attr].dropna().iloc[0])|replace('\n', ' ') }}"/>
    {% endif %}
    {% endfor %}

    <attribute name="further_info_url" value="See netCDF variable 'further_info_url'"/>
    <attribute name="creation_date" value="{{ creation }}"/>
    <attribute name="version" value="{{ df['version'].iloc[0] }}"/>
    <attribute name="replica" value="{{ df['replica'].iloc[0]|lower }}"/>

    <dimension name="nfiles" length="{{ df|length }}"/>
    <dimension name="file" length="2"/>
    {% if 'further_info_url' in df.columns %}
    <variable name="further_info_url" type="string" shape="nfiles file">
        <values>{{ (df[['opendap', 'further_info_url']].agg(' '.join, axis=1))|join(' ') }}</values>
    </variable>
    {% endif %}
    {% if 'tracking_id' in df.columns %}
    <variable name="tracking_id" type="string" shape="nfiles file">
        <values>{{ (df[['opendap', 'tracking_id']].fillna('').agg(' '.join, axis=1))|join(' ') }}</values>
    </variable>
    {% endif %}

    {% if (df["frequency"] == "fx").any() %}
    {% for f in df["opendap"].unique() %}
    <aggregation type="union">
        <netcdf location="{{ f }}"/>
    </aggregation>
    {% endfor %}
    {% else %}
    <aggregation type="joinExisting" dimName="time">
        {% for f in df["opendap"].sort_values().unique() %}
        <netcdf location="{{ f }}"/>
        {% endfor %}
    </aggregation>
    {% endif %}
</netcdf>
